{"remainingRequest":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/shaokai/shixiongProject/shixiongtest/mangesystem2/src/components/Notice/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/src/components/Notice/index.vue","mtime":1677684504067},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/cache-loader/dist/cjs.js","mtime":1677684502691},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/babel-loader/lib/index.js","mtime":1677684502627},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/cache-loader/dist/cjs.js","mtime":1677684502691},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/vue-loader/lib/index.js","mtime":1677684503939}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxpc3ROb3RpY2UgfSBmcm9tICJAL2FwaS9zeXN0ZW0vbm90aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0YWdUeXBlOiAiaW5mbyIsCiAgICAgICAgICAgIG5vdGljZUxpc3Q6IFtdLAogICAgICAgICAgICBxdWVyeVBhcmFtczogewogICAgICAgICAgICAgICAgcGFnZU51bTogMSwKICAgICAgICAgICAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgICAgICAgICAgIG5vdGljZVRpdGxlOiB1bmRlZmluZWQsCiAgICAgICAgICAgICAgICBjcmVhdGVCeTogdW5kZWZpbmVkLAogICAgICAgICAgICAgICAgc3RhdHVzOiB1bmRlZmluZWQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2l6ZU9wdGlvbnM6IFsKICAgICAgICAgICAgXQogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgc2l6ZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuc2l6ZQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLyoqIOafpeivouWFrOWRiuWIl+ihqCAqLwogICAgICAgIGdldExpc3QoKSB7CiAgICAgICAgICAgIGxpc3ROb3RpY2UodGhpcy5xdWVyeVBhcmFtcykudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICBmb3IgKGxldCBpdGVtIG9mIHJlc3BvbnNlLnJvd3MpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdHlwZVZvID0gdGhpcy5nZXRUeXBlKGl0ZW0ubm90aWNlVHlwZSkKICAgICAgICAgICAgICAgICAgICBsZXQgdHlwZSA9IHR5cGVWby5zcGxpdCgiOiIpWzBdCiAgICAgICAgICAgICAgICAgICAgbGV0IG5hbWUgPSB0eXBlVm8uc3BsaXQoIjoiKVsxXQogICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWNlTGlzdC5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBpdGVtLm5vdGljZUlkLAogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaXRlbS5ub3RpY2VUaXRsZSwKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgZ2V0VHlwZShub3RpY2VUeXBlKSB7CiAgICAgICAgICAgIC8vIOagueaNrm5vdGljZVR5cGXov5Tlm57kuI3lkIznmoTmoIfnrb4KICAgICAgICAgICAgaWYgKG5vdGljZVR5cGUgPT0gMykgewogICAgICAgICAgICAgICAgcmV0dXJuICJpbmZvOuS/oeaBryIKICAgICAgICAgICAgfSBlbHNlIGlmIChub3RpY2VUeXBlID09IDIpIHsKICAgICAgICAgICAgICAgIHJldHVybiAic3VjY2VzczrlhazlkYoiCiAgICAgICAgICAgIH0gZWxzZSBpZiAobm90aWNlVHlwZSA9PSAxKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIndhcm5pbmc66YCa55+lIgogICAgICAgICAgICB9IGVsc2UgaWYgKG5vdGljZVR5cGUgPT0gNCkgewogICAgICAgICAgICAgICAgcmV0dXJuICJkYW5nZXI657Sn5oClIgogICAgICAgICAgICB9CgoKICAgICAgICB9LAogICAgICAgIGhhbmRsZU5vdGljZSgpIHsKICAgICAgICAgICAgdGhpcy5yZWZyZXNoVmlldygpCiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgbWVzc2FnZTogJ+i3s+i9rOmAmuefpemhtemdouaIkOWKnycsCiAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIHJlZnJlc2hWaWV3KCkgewogICAgICAgICAgICAvLyBJbiBvcmRlciB0byBtYWtlIHRoZSBjYWNoZWQgcGFnZSByZS1yZW5kZXJlZAogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndGFnc1ZpZXcvZGVsQWxsQ2FjaGVkVmlld3MnLCB0aGlzLiRyb3V0ZSkKCiAgICAgICAgICAgIGNvbnN0IHsgZnVsbFBhdGggfSA9IHRoaXMuJHJvdXRlCgogICAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgcGF0aDogJy9zeXN0ZW0vbm90aWNlJwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9Cgp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/components/Notice","sourcesContent":["<template>\n    <el-dropdown trigger=\"click\" @command=\"handleNotice\">\n        <div>\n            <svg-icon class-name=\"size-icon\" icon-class=\"notice\" />\n        </div>\n        <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item v-for=\"item of noticeList\" :key=\"item.value\" :command=\"item.value\">\n                <el-tag :type=\"item.type\" size=\"small\">{{ item.name }}</el-tag> {{ item.value }} </el-dropdown-item>\n        </el-dropdown-menu>\n    </el-dropdown>\n</template>\n\n<script>\nimport { listNotice } from \"@/api/system/notice\";\nexport default {\n    data() {\n        return {\n            tagType: \"info\",\n            noticeList: [],\n            queryParams: {\n                pageNum: 1,\n                pageSize: 10,\n                noticeTitle: undefined,\n                createBy: undefined,\n                status: undefined\n            },\n            sizeOptions: [\n            ]\n        }\n    },\n    created() {\n        this.getList();\n    },\n    computed: {\n        size() {\n            return this.$store.getters.size\n        }\n    },\n    methods: {\n        /** 查询公告列表 */\n        getList() {\n            listNotice(this.queryParams).then(response => {\n                for (let item of response.rows) {\n                    let typeVo = this.getType(item.noticeType)\n                    let type = typeVo.split(\":\")[0]\n                    let name = typeVo.split(\":\")[1]\n                    this.noticeList.push({\n                        key: item.noticeId,\n                        value: item.noticeTitle,\n                        type: type,\n                        name: name\n                    })\n                }\n            });\n        },\n        getType(noticeType) {\n            // 根据noticeType返回不同的标签\n            if (noticeType == 3) {\n                return \"info:信息\"\n            } else if (noticeType == 2) {\n                return \"success:公告\"\n            } else if (noticeType == 1) {\n                return \"warning:通知\"\n            } else if (noticeType == 4) {\n                return \"danger:紧急\"\n            }\n\n\n        },\n        handleNotice() {\n            this.refreshView()\n            this.$message({\n                message: '跳转通知页面成功',\n                type: 'success'\n            })\n        },\n        refreshView() {\n            // In order to make the cached page re-rendered\n            this.$store.dispatch('tagsView/delAllCachedViews', this.$route)\n\n            const { fullPath } = this.$route\n\n            this.$nextTick(() => {\n                this.$router.push({\n                    path: '/system/notice'\n                })\n            })\n        }\n    }\n\n}\n</script>\n<style scoped>\n.item {\n    margin-top: 10px;\n}\n</style>\n"]}]}