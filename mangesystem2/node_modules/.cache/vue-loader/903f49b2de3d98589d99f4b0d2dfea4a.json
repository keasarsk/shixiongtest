{"remainingRequest":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/shaokai/shixiongProject/shixiongtest/mangesystem2/src/views/display/components/Map.vue?vue&type=style&index=0&id=72128b6c&scoped=true&lang=css&","dependencies":[{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/src/views/display/components/Map.vue","mtime":1677684504071},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/css-loader/dist/cjs.js","mtime":1677684502867},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1677684503939},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/postcss-loader/src/index.js","mtime":1677684503599},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/cache-loader/dist/cjs.js","mtime":1677684502691},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/vue-loader/lib/index.js","mtime":1677684503939}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNtYXAgewogIGhlaWdodDogMTAwJTsKICB3aWR0aDogMTAwJTsKICB6LWluZGV4OiBhdXRvOwogIGJhY2tncm91bmQ6IGJpc3F1ZTsKICAvKmJhY2tncm91bmQtY29sb3I6ICM0MDlFRkY7Ki8KfQoubWFwU3R5bGV7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHotaW5kZXg6IDE7CiAgbWFyZ2luLXRvcDogMTBweDsKICBtYXJnaW4tbGVmdDogMTBweDsKfQoubWFwLWNvbnRhaW5lciB7CiAgaGVpZ2h0OiAxMDAlOwogIHdpZHRoOiAxMDAlOwogIHotaW5kZXg6IDEwOwogIGJhY2tncm91bmQ6IGJpc3F1ZTsKICB6LWluZGV4OiAxMDsKfQo="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/views/display/components","sourcesContent":["<template>\n\n  <div id=\"mapsetting\" :style=\"size\">\n  <!-- <div -->\n  <!-- <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.4.0/dist/leaflet.css\"/> -->\n\n    <!-- <el-radio-group class=\"mapStyle\" v-model=\"mapId\" @change=\"changeStyle\" size=\"mini\">\n      <el-radio-button label='mapbox/streets-v11' size=\"mini\" >平面地图</el-radio-button>\n      <el-radio-button label='mapbox/satellite-v9' size=\"mini\" >卫星地图</el-radio-button>\n      <el-radio-button label='mapbox/outdoors-v10' size=\"mini\" >户外地图</el-radio-button>\n    </el-radio-group> -->\n\n    <!-- <div id=\"map\"></div> -->\n    <div class=\"map-container\" id=\"map-container\"> </div>\n  </div>\n\n  \n\n</template>\n\n<script>\n\nlet map=null\nlet layer = null\nexport default {\n    components: { \n        //   datepicker \n    },\n    data(){\n        return{\n            map: null,\n            layers: null,\n            mapId: 'mapbox/streets-v11',\n            geoLocate:null,\n            userLocation:[],\n            canvasMarkers: [],\n            size: {\n              width: '100%',\n              height: '8.2rem',\n              background: 'whitesmoke',\n            },\n            \n            depotIcon: null,\n                userIcon: null,\n                uavIcon: null,\n        }\n    }, \n    mounted() {\n        // 创建地图层\n        this.map = this.$leaflet.createMap(\"map-container\", {\n            minZoom: 1,\n            maxZoom: 20,\n            zoomControl: false,\n            attributionControl: false,\n            //坐标系选择\n            crs: L.CRS.EPSG3857\n        }).fitWorld()\n\n        this.layers = this.$leaflet.createTileLayer(this.map, 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n            // attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n            maxZoom: 20,\n            id: this.mapId,\n            tileSize: 512,\n            zoomOffset: -1,\n            accessToken: 'pk.eyJ1IjoidHJhbnNjZW5kdHJlZSIsImEiOiJja3N6eHRiMzkxeXNzMm90Y2Rhd2JmbjNqIn0.bCRv7xB55jHSDwEF5y5DcA'\n        })\n        // this.map.setView([51.505, -0.09], 13);\n        this.$leaflet.zoomControl({ position: 'topright' }).addTo(this.map)\n        this.$leaflet.zoomAttribution(\n            {\n                position: 'bottomright',\n                prefix: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n            }\n        )\n        // 定位\n        this.$leaflet.locate({ position: 'bottomright', initialZoomLevel: 15, setView: \"once\", flyTo: true}).addTo(this.map);\n        // this.map.on('click', e =>{\n        //   console.log(e)\n        // })\n        // 初始化Icon\n        this.iconInit()\n        this.queryLatlng()\n    },\n    methods: {\n        // icon init\n        async iconInit() {\n            this.userIcon = this.$leaflet.createIcon({\n                iconUrl: require(\"@/assets/icons/flyIcon/mobile.png\"),\n                iconSize: [36, 36]\n            })\n            this.depotIcon = this.$leaflet.createIcon({\n                iconUrl: require(\"@/assets/icons/flyIcon/depot.png\"),\n                iconSize: [36, 36]\n            })\n            this.uavIcon = this.$leaflet.createIcon({\n                iconUrl: require(\"@/assets/icons/flyIcon/uav48.png\"),\n                iconSize: [36, 36]\n            })\n            \n        },\n        // 地图样式改变\n        changeStyle() {\n            this.map.removeLayer(this.layers)\n            this.$leaflet.createTileLayer(this.map, 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n                attribution: 'Map data &copy; wa href=\"https://www.openstreetmap.org/copyright\"wOpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n                maxZoom: 20,\n                id: this.mapId,\n                tileSize: 512,\n                // zoomOffset 注释掉会出大问题\n                zoomOffset: -1,\n                accessToken: 'pk.eyJ1IjoidHJhbnNjZW5kdHJlZSIsImEiOiJja3N6eHRiMzkxeXNzMm90Y2Rhd2JmbjNqIn0.bCRv7xB55jHSDwEF5y5DcA'\n            })\n        },\n        // 获取坐标\n        queryLatlng(){\n          let latlng = {\n            lat: 39.08343208067558,\n            lng: 121.81061116978528\n          }\n          // console.log(latlng)\n          this.drawUav(latlng)\n        },\n        // 传入坐标,绘制无人机\n        drawUav(latlng){\n          \n          this.$leaflet.createMarker(latlng, { icon: this.uavIcon, title: \"无人机正在执行任务\" }).addTo(this.map)\n        }\n\n    }\n}\n</script>\n\n<style scoped>\n#map {\n  height: 100%;\n  width: 100%;\n  z-index: auto;\n  background: bisque;\n  /*background-color: #409EFF;*/\n}\n.mapStyle{\n  position: absolute;\n  z-index: 1;\n  margin-top: 10px;\n  margin-left: 10px;\n}\n.map-container {\n  height: 100%;\n  width: 100%;\n  z-index: 10;\n  background: bisque;\n  z-index: 10;\n}\n</style>"]}]}