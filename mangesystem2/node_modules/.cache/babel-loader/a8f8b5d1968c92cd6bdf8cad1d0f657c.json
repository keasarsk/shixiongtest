{"remainingRequest":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/babel-loader/lib/index.js!/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/shaokai/shixiongProject/shixiongtest/mangesystem2/src/views/uav/uavmap/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/src/views/uav/uavmap/index.vue","mtime":1677684504075},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/babel.config.js","mtime":1677684502367},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/cache-loader/dist/cjs.js","mtime":1677684502691},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/babel-loader/lib/index.js","mtime":1677684502627},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/cache-loader/dist/cjs.js","mtime":1677684502691},{"path":"/home/shaokai/shixiongProject/shixiongtest/mangesystem2/node_modules/vue-loader/lib/index.js","mtime":1677684503939}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_buttonpage","_interopRequireDefault","require","_missionStart","_uuidJs","layerGroup","userlayer","depotlayer","linelayer","_default","name","components","MissionStart","buttonpage","data","map","layers","mapId","geoLocate","editFtButton","placeUserPoint","placeDepotPoint","uploadStatus","vehicleNumber","uuid","lineInfo","userLength","backendLine","pathline","drawlineState","marker","uploadinfo","userinfo","locationinfo","markers","users","depot","uav","icon","depotIcon","userIcon","uavIcon","mounted","$leaflet","createMap","minZoom","maxZoom","zoomControl","attributionControl","crs","L","CRS","EPSG3857","fitWorld","createTileLayer","id","tileSize","zoomOffset","accessToken","position","addTo","zoomAttribution","prefix","locate","initialZoomLevel","setView","flyTo","iconInit","methods","_this","_asyncToGenerator2","default","_regeneratorRuntime2","mark","_callee","wrap","_callee$","_context","prev","next","createIcon","iconUrl","iconSize","stop","changeStyle","removeLayer","attribution","inputUserLocation","userid","createStamp","e","that","userString","locationString","serviceTime","status","geoPoint","type","coordinates","mobileId","serviceStatus","createTime","push","latlng","lat","lng","addUserMarker","_this2","console","log","on","userStr","Date","createMarker","title","off","addDepotMarker","_this3","depotStr","$message","warning","resetMarkers","remove","length","uploadAll","_this4","_callee2","_yield$_this4$$http$p","resuser","_yield$_this4$$http$p2","reslocate","_callee2$","_context2","error","abrupt","$http","post","sent","success","planRoute","_this5","_callee3","_yield$_this5$$http$p","existuuid","_yield$_this5$$http$g","res","_yield$_this5$$http$g2","_res","_yield$_this5$$http$p2","resLocation","_yield$_this5$$http$p3","resPlan","_callee3$","_context3","qs","stringify","get","results","vehicleNum","msg","Object","values","storeUavRouteInfo","drawPathLine","i","locationArray","j","location","colorPathSet","polyline","weight","color","polylineDecorator","patterns","offset","repeat","symbol","Symbol","arrowHead","pixelSize","headAngle","polygon","pathOptions","stroke","drawUAV","Array","flyingSpeed","Marker","movingMarker","bindPopup","autoClose","closeOnClick","openPopup","animateUAV","uavIndex","start","updateRealLine","exports"],"sources":["src/views/uav/uavmap/index.vue"],"sourcesContent":["<template>\n    <div>\n        <el-radio-group class=\"buttonGroup\" v-model=\"mapId\" @change=\"changeStyle\" size=\"mini\">\n            <el-radio-button label='mapbox/streets-v11' size=\"mini\">平面地图</el-radio-button>\n            <el-radio-button label='mapbox/satellite-v9' size=\"mini\">卫星地图</el-radio-button>\n            <el-radio-button label='mapbox/outdoors-v10' size=\"mini\">户外地图</el-radio-button>\n        </el-radio-group>\n        <buttonpage :editFtButton=\"editFtButton\" @drawLine=\"drawPathLine\" @planRoute=\"planRoute\"\n        @resetAllMarker=\"resetMarkers\" @placeUser=\"addUserMarker\" @placeDepot=\"addDepotMarker\" @pushAll=\"uploadAll\">\n        </buttonpage>\n        <!-- <mission-start :lineInfo=\"lineInfo\" @animateMarkers=\"animateUAV\"></mission-start> -->\n        <div class=\"map-container\" id=\"map-container\"> </div>\n    </div>\n</template>\n\n<script>\n// 引入buttonpage组件\nimport buttonpage from './buttonpage.vue'\nimport MissionStart from './missionStart.vue'\nimport UUID from \"uuid-js\"\nlet layerGroup = {\n    userlayer: null,\n    depotlayer: null,\n    linelayer: null,\n}\n// 导入地图\nexport default {\n    name: 'UavsystemUiIndex',\n    components: {\n        MissionStart,\n        buttonpage\n    },\n\n    data() {\n        return {\n            map: null,\n            layers: null,\n            mapId: 'mapbox/streets-v11',\n            geoLocate: null,\n            editFtButton: {\n                placeUserPoint: false,\n                placeDepotPoint: false,\n                uploadStatus: false,\n                vehicleNumber: null,\n                uuid: null,\n            },\n            lineInfo: {\n                userLength: 0,\n                backendLine: [],\n                pathline: [],\n                // 存储路线的状态\n                drawlineState: [],\n                marker: []\n            },\n            // 用户信息和用户位置信息\n            uploadinfo: {\n                uuid: null,\n                userinfo: [],\n                locationinfo: []\n            },\n            markers: {\n                users: [],\n                depot: null,\n                uav: []\n            },\n            icon: {\n                depotIcon: null,\n                userIcon: null,\n                uavIcon: null,\n            }\n        };\n    },\n\n    mounted() {\n        // 创建地图层\n        this.map = this.$leaflet.createMap(\"map-container\", {\n            minZoom: 1,\n            maxZoom: 20,\n            zoomControl: false,\n            attributionControl: false,\n            //坐标系选择\n            crs: L.CRS.EPSG3857\n        }).fitWorld()\n\n        this.layers = this.$leaflet.createTileLayer(this.map, 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n            // attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n            maxZoom: 20,\n            id: this.mapId,\n            tileSize: 512,\n            zoomOffset: -1,\n            accessToken: 'pk.eyJ1IjoidHJhbnNjZW5kdHJlZSIsImEiOiJja3N6eHRiMzkxeXNzMm90Y2Rhd2JmbjNqIn0.bCRv7xB55jHSDwEF5y5DcA'\n        })\n        // this.map.setView([51.505, -0.09], 13);\n        this.$leaflet.zoomControl({ position: 'topright' }).addTo(this.map)\n        this.$leaflet.zoomAttribution(\n            {\n                position: 'bottomright',\n                prefix: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>'\n            }\n        )\n        // 定位\n        this.$leaflet.locate({ position: 'bottomright', initialZoomLevel: 15, setView: \"once\", flyTo: true}).addTo(this.map);\n        // 初始化Icon\n        this.iconInit()\n    },\n\n    methods: {\n        // icon init\n        async iconInit() {\n            this.userIcon = this.$leaflet.createIcon({\n                iconUrl: require(\"@/assets/icons/flyIcon/mobile.png\"),\n                iconSize: [36, 36]\n            })\n            this.depotIcon = this.$leaflet.createIcon({\n                iconUrl: require(\"@/assets/icons/flyIcon/depot.png\"),\n                iconSize: [36, 36]\n            })\n            this.uavIcon = this.$leaflet.createIcon({\n                iconUrl: require(\"@/assets/icons/flyIcon/uav48.svg\"),\n                iconSize: [36, 36]\n            })\n            \n        },\n        // 地图样式改变\n        changeStyle() {\n            this.map.removeLayer(this.layers)\n            this.$leaflet.createTileLayer(this.map, 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n                attribution: 'Map data &copy; wa href=\"https://www.openstreetmap.org/copyright\"wOpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n                maxZoom: 20,\n                id: this.mapId,\n                tileSize: 512,\n                // zoomOffset 注释掉会出大问题\n                zoomOffset: -1,\n                accessToken: 'pk.eyJ1IjoidHJhbnNjZW5kdHJlZSIsImEiOiJja3N6eHRiMzkxeXNzMm90Y2Rhd2JmbjNqIn0.bCRv7xB55jHSDwEF5y5DcA'\n            })\n        },\n        // 输入参数中间函数\n        inputUserLocation(userid, createStamp, e) {\n            let that = this\n            let userString = {}\n            let locationString = {\n                userid: '',\n                serviceTime: '',\n                status: '',\n                geoPoint: {\n                    type: '',\n                    coordinates: []\n                }\n            }\n            userString.mobileId = userid\n            userString.serviceStatus = false\n            userString.uuid = this.uploadinfo.uuid\n            userString.createTime = createStamp\n            // 上传用户信息\n            that.uploadinfo.userinfo.push(userString)\n            locationString.userid = userid\n            locationString.uuid = this.uploadinfo.uuid\n            locationString.serviceTime = createStamp\n            locationString.status = false\n            locationString.geoPoint.coordinates[0] = e.latlng.lat\n            locationString.geoPoint.coordinates[1] = e.latlng.lng\n            locationString.geoPoint.type = \"Point\"\n            // 上传位置信息\n            that.uploadinfo.locationinfo.push(locationString)\n        },\n        addUserMarker() {\n            console.log(\"addUserMarker\")\n            this.editFtButton.placeUserPoint = !this.editFtButton.placeUserPoint\n            // 放置两个按钮干扰\n            if (this.editFtButton.placeDepotPoint) {\n                this.editFtButton.placeDepotPoint = !this.editFtButton.placeDepotPoint\n            }\n            this.map.on('click', (e) => {\n                if (!this.editFtButton.placeUserPoint) {\n                    console.log(\"status:  \" + this.editFtButton.placeUserPoint)\n                    return\n                }\n                let userStr = \"user \" + this.lineInfo.userLength\n                let createStamp = new Date()\n                this.inputUserLocation(userStr, createStamp, e)\n                // optmize\n                // this.markers.users[this.lineInfo.userLength] = this.$leaflet.createMarker(e.latlng, { icon: this.userIcon, title: userStr })\n                this.markers.users.push(this.$leaflet.createMarker(e.latlng, { icon: this.userIcon, title: userStr }))\n                this.lineInfo.userLength += 1\n                layerGroup.userlayer = this.$leaflet.layerGroup(this.markers.users)\n                layerGroup.userlayer.addTo(this.map)\n                // this.$leaflet.layerGroup(this.markers.users).addLayer(layerGroup.userlayer).addTo(this.map)\n            })\n            if (!this.editFtButton.placeUserPoint) {\n                // 添加涂层\n                console.log(\"off\")\n                this.map.off('click')\n            }\n        },\n        addDepotMarker() {\n            this.editFtButton.placeDepotPoint = !this.editFtButton.placeDepotPoint\n            // 防置两个干扰\n            if (this.editFtButton.placeUserPoint) {\n                this.editFtButton.placeUserPoint = !this.editFtButton.placeUserPoint\n            }\n            if (this.markers.depot === null) {\n                this.map.on('click', (e) => {\n                    if (!this.editFtButton.placeDepotPoint && this.markers.depot !== null) {\n                        console.log(\"status:  \" + this.editFtButton.placeDepotPoint)\n                        return\n                    }\n                    let depotStr = \"depot 0\"\n                    let createStamp = new Date()\n                    this.inputUserLocation(depotStr, createStamp, e)\n                    this.markers.depot = this.$leaflet.createMarker(e.latlng, { icon: this.depotIcon, title: depotStr }).addTo(this.map)\n                    layerGroup.depotlayer = L.layerGroup([this.markers.depot])\n                    layerGroup.depotlayer.addTo(this.map)\n                    if (this.markers.depot !== null) {\n                        this.editFtButton.placeDepotPoint = !this.editFtButton.placeDepotPoint\n                        console.log(this.editFtButton.placeDepotPoint)\n                        this.map.off('click')\n                    }\n                })\n            } else {\n                this.$message.warning(\"仓库已经放置过了\")\n                this.editFtButton.placeDepotPoint = !this.editFtButton.placeDepotPoint\n                console.log(this.editFtButton.placeDepotPoint + \"状态\")\n                map.off('click')\n            }\n            console.log(this.markers.depot)\n        },\n        resetMarkers() {\n            if (layerGroup.depotlayer === null && layerGroup.userlayer === null && layerGroup.linelayer === null) {\n                this.$message.warning(\"纯净状态\")\n                return\n            }\n            if (layerGroup.depotlayer !== null) {\n                layerGroup.depotlayer.remove()\n            }\n            if (layerGroup.userlayer !== null) {\n                layerGroup.userlayer.remove()\n                layerGroup.userlayer = null\n            }\n            if (layerGroup.linelayer !== null) {\n                layerGroup.linelayer.remove()\n                layerGroup.linelayer = null\n            }\n            this.editFtButton.uploadStatus = false\n            // 两个路线数组置空\n            this.lineInfo.pathline = []\n            this.lineInfo.backendLine = []\n            this.markers.users.length = 0\n            this.markers.users = []\n            this.markers.depot = null\n        },\n        async uploadAll() {\n            if (this.uploadinfo.locationinfo.length === 0 || this.uploadinfo.userinfo.length === 0) {\n                this.$message.error(\"提交不完整\")\n                return\n            }\n            if (this.editFtButton.uploadStatus) {\n                this.$message.warning(\"请勿重复提交\")\n                return\n            }\n            const { data: resuser } = await this.$http.post('mobile/savemany', this.uploadinfo.userinfo)\n            const { data: reslocate } = await this.$http.post('mobile/manylocations', this.uploadinfo.locationinfo)\n            if (resuser.status === 200 && reslocate.status === 200) {\n                this.$message.success(\"推送成功\")\n                this.editFtButton.uploadStatus = !this.editFtButton.uploadStatus\n            } else {\n                this.$message.error(\"推送失败\")\n            }\n            console.log(reslocate)\n            console.log(resuser)\n        },\n        async planRoute() {\n            if (this.editFtButton.vehicleNumber === null) {\n                this.$message.warning(\"必须提供无人机数量\")\n                return\n            }\n            let uuid = null\n            console.log(this.editFtButton.uuid)\n            if (this.editFtButton.uuid !== null) {\n                const { data: existuuid } = await this.$http.post('mobile/existuuid', qs.stringify({ uuid: this.editFtButton.uuid }))\n                // 返回的是字符串\n                if (existuuid.status === '200') {\n                    uuid = this.editFtButton.uuid\n                } else {\n                    const { data: res } = await this.$http.get('/mobile/findlastuuid')\n                    if (res.status !== 200) {\n                        this.$message.error(\"当前不存在任何用户\")\n                        return\n                    }\n                    uuid = res.results\n                }\n            } else {\n                const { data: res } = await this.$http.get('/mobile/findlastuuid')\n                if (res.status !== 200) {\n                    this.$message.error(\"当前不存在任何用户\")\n                    return\n                }\n                uuid = res.results\n            }\n            const { data: resLocation } = await this.$http.post('compute/saveAllLocation', qs.stringify({ uuid: uuid }))\n            console.log(\"保存用户\")\n            console.log(resLocation)\n            const { data: resPlan } = await this.$http.post('compute/findStaticRoutes', qs.stringify({ vehicleNum: this.editFtButton.vehicleNumber }))\n            console.log(resPlan)\n            if (resPlan.status !== 200) {\n                this.$message.error(resPlan.msg)\n            } else {\n                this.$message.success(resPlan.msg)\n                /*\n                转换为数组类型\n                 */\n                this.lineInfo.backendLine = Object.values(resPlan.results)\n                // vuex状态管理路线信息\n                this.storeUavRouteInfo(resPlan.results)\n                console.log(this.lineInfo.backendLine)\n                console.log(resPlan)\n            }\n        },\n        drawPathLine() {\n            for (let i = 0; i < this.lineInfo.backendLine.length - 1; i++) {\n                let locationArray = []\n                for (let j = 0; j < this.lineInfo.backendLine[i].length; j++) {\n                    locationArray.push(this.lineInfo.backendLine[i][j].location)\n                }\n                this.lineInfo.pathline.push(locationArray)\n            }\n            let colorPathSet = ['#00bd01', '#008080', '#BDB76B', '#DAA520', '#FF7F50', '#BC8F8F', '#48D1CC', '#87CEFA', '#9400D3']\n            layerGroup.linelayer = L.layerGroup().addTo(this.map)\n            for (let i = 0; i < this.lineInfo.pathline.length; i++) {\n                this.lineInfo.drawlineState[i] = L.polyline(this.lineInfo.pathline[i], { weight: 8, color: colorPathSet[i] }).addTo(layerGroup.linelayer)\n                // L.layerGroup(this.lineInfo.drawlineState[i]).addLayer(layerGroup.linelayer)\n                L.polylineDecorator(this.lineInfo.drawlineState[i], {\n                    patterns: [\n                        {\n                            offset: 0, repeat: 20, symbol: L.Symbol.arrowHead({\n                                pixelSize: 5,\n                                headAngle: 75,\n                                polygon: false,\n                                pathOptions: {\n                                    stroke: true,\n                                    weight: 2,\n                                    color: '#ffffff'\n                                }\n                            })\n                        }\n                    ]\n                }).addTo(layerGroup.linelayer)\n            }\n            // 绘制飞行无人机\n            this.drawUAV()\n        },\n        drawUAV() {\n            this.lineInfo.marker = new Array(this.lineInfo.pathline.length)\n            for (let i = 0; i < this.lineInfo.pathline.length; i++) {\n                // let flyingSpeed = [];\n                let flyingSpeed = new Array(this.lineInfo.pathline[i].length)\n                for (let j = 0; j < this.lineInfo.pathline[i].length; j++) {\n                    flyingSpeed[j] = 1000;\n                }\n                this.lineInfo.marker[i] = L.Marker.movingMarker(this.lineInfo.pathline[i], flyingSpeed, { icon: this.uavIcon }).addTo(this.map);\n                this.lineInfo.marker[i].bindPopup(\"无人机<b>\" + i + \"</b>的路线\", { autoClose: false, closeOnClick: false }).openPopup();\n            }\n        },\n        animateUAV() {\n            for (let uavIndex = 0; uavIndex < this.lineInfo.marker.length; uavIndex++) {\n                this.lineInfo.marker[uavIndex].start()\n            }\n        },\n        // 绘制已行走轨迹线（橙色那条）\n        updateRealLine() {\n            // newLatlngs.push(latlng)\n            // realRouteLine.setLatLngs(newLatlngs)\n        }\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.map-container {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n}\n\n.buttonGroup {\n    position: absolute;\n    z-index: 1;\n    margin-top: 20px;\n    margin-left: 20px;\n}\n</style>"],"mappings":"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"}]}